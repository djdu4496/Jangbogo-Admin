<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jangbogo.admin.dao.BoardMapper">

    <!--
        태   그 : sql
        아이디명 : InquerySearchCondition
        기   능 : 반복 할 내용을 간단히 저장 후 재사용 - 상품 후기 리스트 검색 조건 쿼리
    -->
    <sql id="InquerySearchCondition">
        <choose>
            <when test='option=="W"'>
                AND pi.writer LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="P"'>
                AND p.name LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="T"'>
                AND pi.title LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND pi.writer LIKE concat('%', #{keyword}, '%')
                OR p.name LIKE concat('%', #{keyword}, '%')
                OR pi.title LIKE concat('%', #{keyword}, '%')
            </otherwise>
        </choose>
    </sql>


    <!--
        태   그 : sql
        아이디명 : ReviewSearchCondition
        기   능 : 반복 할 내용을 간단히 저장 후 재사용 - 상품 후기 리스트 검색 조건 쿼리
    -->
    <sql id="ReviewSearchCondition">
        <choose>
            <when test='option=="W"'>
                AND PROD_LATE.WRITER LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="P"'>
                AND PRODUCT.NAME LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="PW"'>
                AND (PROD_LATE.WRITER LIKE concat('%', #{keyword}, '%')
                OR PRODUCT.NAME LIKE concat('%', #{keyword}, '%'))
            </when>
            <otherwise>
                AND (PROD_LATE.IDX LIKE concat('%', #{keyword}, '%')
                OR PROD_LATE.WRITER LIKE concat('%', #{keyword}, '%') OR PROD_LATE.PROD_IDX LIKE concat('%', #{keyword}, '%') OR PRODUCT.NAME LIKE concat('%', #{keyword}, '%') OR PROD_LATE.CTENT LIKE concat('%', #{keyword}, '%') OR PROD_LATE.OPUB_YN LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>

    <!--
        태   그 : select
        기   능 : '상품 후기' 테이블의 전체 데이터 조회
        아이디명 : ReviewSelectedPage
    -->
    <select id="ReviewSelectedPage" parameterType="SearchCondition" resultType="ProdReviewDto">
        select PROD_LATE.*,PRODUCT.NAME,USER.EMAIL,USER.NICK_NM,USER.MPNO
        from PROD_LATE, PRODUCT, USER
        WHERE PROD_LATE.PROD_IDX = PRODUCT.IDX AND PROD_LATE.USER_IDX = USER.IDX
        <include refid="ReviewSearchCondition"/>
        ORDER BY REG_TM DESC, IDX DESC
        LIMIT #{offset}, #{pageSize};
    </select>


    <!--
        태   그 : select
        기   능 : '상품후기' 테이블과 '상품', '회원' 테이블의 조인 데이터 수(Count) 조회
        아이디명 : ReviewSearchResultCnt
    -->
    <select id="ReviewSearchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT COUNT(*)
        FROM PROD_LATE, PRODUCT, USER
        WHERE PROD_LATE.PROD_IDX = PRODUCT.IDX AND PROD_LATE.USER_IDX = USER.IDX
        <include refid="ReviewSearchCondition"/>
    </select>

    <!--
        태   그 : select
        기   능 : '상품', '회원' 테이블과 '상품후기' 테이블의 조인 데이터 조회
        아이디명 : selectReviewDetail
    -->
    <select id="selectReviewDetail" parameterType="int" resultType="ProdReviewDto">
        SELECT PROD_LATE.*,PRODUCT.NAME,USER.EMAIL,USER.NICK_NM,USER.MPNO
        FROM PRODUCT,USER,(SELECT *
                           FROM PROD_LATE
                           WHERE IDX = #{idx}) AS PROD_LATE
        WHERE PRODUCT.IDX = PROD_LATE.PROD_IDX AND USER.IDX = PROD_LATE.USER_IDX;
    </select>

    <!--
        태   그 : update
        기   능 : '상품 후기' 테이블에서 해당 후기의 상태를 '2'(삭제)로 변경한다
        아이디명 : toDeleteState
    -->
    <update id="toDeleteState" parameterType="int">
        UPDATE PROD_LATE
        SET STATE_CD = 2
        WHERE IDX = #{idx};
    </update>

    <!--
        태   그 : update
        기   능 : '상품 후기' 테이블에서 해당 후기의 상태를 '1'(등록)로 변경한다
        아이디명 : toRegisterState
    -->
    <update id="toRegisterState" parameterType="int">
        UPDATE PROD_LATE
        SET STATE_CD = 1
        WHERE IDX = #{idx};
    </update>

    <!--
        태   그 : select
        기   능 : '상품 후기' 테이블에서 해당 후기의 상태를 조회한다
        아이디명 : checkState
    -->
    <select id="checkState" parameterType="int" resultType="int">
        select STATE_CD
        FROM PROD_LATE
        WHERE IDX = #{idx};
    </select>

<!--  상품문의  -->
<!--  상품문의 리스트 전체보기 - 상품테이블에서 상품이름, 회원테이블에서 회원닉네임 가져오기-->
    <!--
        태   그 : select
        기   능 : '상품문의' 테이블의 전체 데이터 조회
        아이디명 : selectProdInqryPage
    -->
    <select id="selectProdInqryPage" parameterType="SearchCondition" resultType="ProdInqryDto">
        SELECT
        p.name, pi.idx, pi.prod_idx, pi.user_idx, pi.title, pi.ctent, pi.writer, pi.res_state_cd, pi.state_cd, pi.wrt_tm, pd.state_cd as 'prodDetail_state_cd'
        FROM prod_inqry pi
        JOIN product p
            ON p.idx = pi.prod_idx
        JOIN prod_dtl pd
            ON pd.prod_idx = p.idx
        WHERE TRUE
        <include refid="InquerySearchCondition"/>
        ORDER BY pi.crt_tm DESC, pi.IDX DESC
        LIMIT #{offset}, #{pageSize};
    </select>

    <!--
        태   그 : select
        기   능 : '주문상세' 테이블과 '주문이력' 테이블의 조인 데이터 조회
        아이디명 : selectResultCnt
    -->
    <select id="selectResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT COUNT(*)
        FROM prod_inqry pi
        JOIN product p ON p.idx = pi.prod_idx
        WHERE true
        <include refid="InquerySearchCondition"/>
    </select>


<!--  상품문의 리스트 중 답변 대기이면서 삭제되지 않은 게시물 개수 보기 (답변을 달아줘야하는 총 게시물 개수) -->
    <select id="cntWaitingAnswer" resultType="Integer">
        select count(*)
        from prod_inqry pi
            join product p on p.idx = pi.prod_idx
        where pi.RES_STATE_CD = 1 and pi.STATE_CD = 1;
    </select>
<!-- 상세페이지에서 답변이 없는 상품문의 한 개 보기 -->
    <select id="showOneInqry" parameterType="Integer" resultType="ProdInqryDto">
        select
            pi.idx, pi.prod_idx, pi.user_idx, pi.title, pi.ctent, pi.writer, pi.res_state_cd, pi.state_cd, pi.wrt_tm
        from prod_inqry pi
        where pi.idx = #{idx};
    </select>
<!--  상세페이지에서 답변이 있는 상품문의 한 개 보기  -->
    <select id="showAnsOKInqry" parameterType="Integer" resultType="ProdInqryDto">
        select
            pi.idx, pi.prod_idx, pi.user_idx, pi.title, pi.ctent, pi.writer, pi.res_state_cd, pi.state_cd, pi.wrt_tm, pia.ctent as 'ans_ctent', pia.writer as 'ans_writer', pia.RESPS_TM as 'ans_resps_tm', pia.CRT_IDX as 'ans_crt_idx', pia.UPT_IDX as 'ans_upt_idx', pia.STATE_CD as 'ans_state_cd'
        from prod_inqry pi join prod_inqry_ans pia
                                on pi.idx = pia.idx
        where pi.idx = #{idx};
    </select>
<!--  [답변주가]상품문의 답변 추가하기  -->
    <insert id="insertInqry" parameterType="ProdInqryAnsDto">
        insert into prod_inqry_ans(idx, ctent, writer)
        values (#{idx}, #{ctent}, #{writer});
    </insert>
<!-- [답변추가]상품문의 답변 상태코드 답변완료로 변경하기 -->
    <update id="changeAnsState" parameterType="Integer">
        update prod_inqry
        set RES_STATE_CD = 2
        where idx = #{idx};
    </update>
<!--  문의 답변 수정하기  -->
    <update id="updateAnswer" parameterType="ProdInqryAnsDto">
        update prod_inqry_ans
        set ctent = #{ctent} , writer = #{writer}
        where idx = #{idx};
    </update>

<!--  [답변삭제]문의 삭제하기 문의 답변테이블, 문의 테이블 상태코드 변경 -->
    <update id="updateAnsTbCode" parameterType="Integer">
        update prod_inqry_ans
        set state_cd = 2
        where idx = #{idx};
    </update>
<!--  [답변삭제]  -->
    <update id="updateInqryTbCode" parameterType="Integer">
        update prod_inqry
        set state_cd = 2
        where idx = #{idx};
    </update>
</mapper>
